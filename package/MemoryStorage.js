// Generated by CoffeeScript 1.6.3
(function() {
  var MemoryStorage, RevisionConflict, RevisionOutOfSequence, throws;

  RevisionConflict = require('./RevisionConflict');

  RevisionOutOfSequence = require('./RevisionOutOfSequence');

  throws = function() {
    throw new Error('No callback defined');
  };

  module.exports = MemoryStorage = (function() {
    function MemoryStorage(props) {
      if (props == null) {
        props = {};
      }
      this.collection = props.collection;
      this.setDefaults();
    }

    MemoryStorage.prototype.setDefaults = function() {
      if (this.collection == null) {
        return this.collection = [];
      }
    };

    MemoryStorage.prototype.store = function(revision, callback) {
      var error, previousId, revisionId;
      if (callback == null) {
        callback = throws;
      }
      revisionId = [revision.resourceType, revision.resourceId, revision.resourceVersion].join(',');
      if (this.collection[revisionId] != null) {
        error = new RevisionConflict();
        return callback(error);
      }
      previousId = [revision.resourceType, revision.resourceId, revision.resourceVersion - 1].join(',');
      if (!(revision.resourceVersion === 0 || (this.collection[previousId] != null))) {
        error = new RevisionOutOfSequence();
        return callback(error);
      }
      this.collection[revisionId] = revision;
      return callback();
    };

    return MemoryStorage;

  })();

}).call(this);

/*
//@ sourceMappingURL=MemoryStorage.map
*/
