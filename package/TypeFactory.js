// Generated by CoffeeScript 1.6.3
(function() {
  var TypeFactory, TypeUnknown,
    __hasProp = {}.hasOwnProperty,
    __slice = [].slice;

  TypeUnknown = require('./TypeUnknown');

  module.exports = TypeFactory = (function() {
    function TypeFactory(props) {
      if (props == null) {
        props = {};
      }
      this.types = props.types;
      this.setDefaults();
    }

    TypeFactory.prototype.setDefaults = function() {
      if (this.types == null) {
        return this.types = {};
      }
    };

    TypeFactory.prototype.register = function(map) {
      var constructor, name, _results;
      if (map == null) {
        map = {};
      }
      _results = [];
      for (name in map) {
        if (!__hasProp.call(map, name)) continue;
        constructor = map[name];
        _results.push(this.types[name] = constructor);
      }
      return _results;
    };

    TypeFactory.prototype.isRegistered = function(name) {
      return this.type(name) != null;
    };

    TypeFactory.prototype.type = function(name) {
      return this.types[name];
    };

    TypeFactory.prototype.construct = function() {
      var args, constructor, name, object;
      name = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      if (!this.isRegistered(name)) {
        throw new TypeUnknown({
          typeName: name
        });
      }
      constructor = this.type(name);
      object = Object.create(constructor.prototype);
      constructor.apply(object, args);
      return object;
    };

    return TypeFactory;

  })();

}).call(this);

/*
//@ sourceMappingURL=TypeFactory.map
*/
