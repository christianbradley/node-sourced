// Generated by CoffeeScript 1.6.3
var Event;

module.exports = Event = (function() {
  function Event(props) {
    this.setProperties(props);
    this.setDefaults();
  }

  Event.prototype.setProperties = function(props) {
    if (props == null) {
      props = {};
    }
    this.type = props.type;
    this.resourceType = props.resourceType;
    this.resourceUUId = props.resourceUUId;
    this.revisionNumber = props.revisionNumber;
    this.index = props.index;
    return this.payload = props.payload;
  };

  Event.prototype.setDefaults = function() {
    if (this.type === void 0) {
      this.type = this.constructor.name;
    }
    if (this.payload === void 0) {
      return this.payload = {};
    }
  };

  Event.prototype.identify = function() {
    return new Event.Identity({
      resourceUUId: this.resourceUUId,
      revisionNumber: this.revisionNumber,
      index: this.index
    });
  };

  return Event;

})();

Event.Identity = (function() {
  function Identity(props) {
    this.setProperties(props);
  }

  Identity.prototype.setProperties = function(props) {
    if (props == null) {
      props = {};
    }
    this.resourceUUId = props.resourceUUId;
    this.revisionNumber = props.revisionNumber;
    return this.index = props.index;
  };

  Identity.prototype.toString = function() {
    var buf1, buf2;
    buf1 = new Buffer(4);
    buf1.writeUInt32LE(this.revisionNumber, 0);
    buf2 = new Buffer(1);
    buf2.writeUInt8(this.index, 0);
    return [this.resourceUUId, buf1.toString('hex'), buf2.toString('hex')].join('-');
  };

  return Identity;

})();

/*
//@ sourceMappingURL=event.map
*/
